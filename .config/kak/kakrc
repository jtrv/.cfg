# Kakoune with Kakhis
# Author: Jacob Travers

evaluate-commands %sh{
  cork init
  skyspell-kak init
  kamp init -a -e EDITOR='kamp edit'
}

################### DISPLAY ###################

colorscheme calo-nord

set-option global ui_options terminal_assistant=none
set-option global scrolloff 1,3

# Toggle relative line numbers with insert mode
cork number-toggle https://github.com/evanrelf/number-toggle.kak %{
  require-module "number-toggle"
  set-option global number_toggle_params -hlcursor -cursor-separator '┼'
}

# Rainbow delimiters + current scope
cork kak-rainbower https://github.com/jtrv/kak-rainbower %{
  hook global WinCreate .* %{ rainbow-enable-window }
}

############### FORMAT/LINT ###############

# LSP Magic
cork kak-lsp https://github.com/kak-lsp/kak-lsp %{
  define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
  set global lsp_diagnostic_line_error_sign '║'
  set global lsp_diagnostic_line_warning_sign '┊'
  set global lsp_hover_max_lines 40
  hook global KakEnd .* lsp-exit
}

# Lint/format etc mode
declare-user-mode dev
  map global dev d -docstring "diagnostic"   ': lsp-diagnostics <ret>'
  map global dev f -docstring "format"       ': format <ret>'
  map global dev F -docstring "format sel"   ': format-selections <ret>'
  map global dev n -docstring "next lint"    ': lint-next-message <ret>'
  map global dev p -docstring "prev lint"    ': lint-previous-message <ret>'
  map global dev l -docstring "lint"         ': lint <ret>'
  map global dev L -docstring "lint-buffer"  ': buffer *lint-output* <ret>'
  map global dev s -docstring "set filetype" ': set-filetype<ret>'

cork indent https://github.com/kirusfg/indent.kak %{
  enable-detect-indent
  set-indent global 2
}

cork smarttab https://github.com/andreyorst/smarttab.kak %{
  hook global BufCreate .* %{
    autoconfigtab
  }
}

# Contextual Scripts
source "~/.config/kak/contexts/commit.kak"
source "~/.config/kak/contexts/css.kak"
source "~/.config/kak/contexts/diff.kak"
source "~/.config/kak/contexts/fish.kak"
source "~/.config/kak/contexts/go.kak"
source "~/.config/kak/contexts/grep.kak"
source "~/.config/kak/contexts/html.kak"
source "~/.config/kak/contexts/javascript.kak"
source "~/.config/kak/contexts/json.kak"
source "~/.config/kak/contexts/markdown.kak"
source "~/.config/kak/contexts/python.kak"
source "~/.config/kak/contexts/rust.kak"
source "~/.config/kak/contexts/sh.kak"
source "~/.config/kak/contexts/typescript.kak"
source "~/.config/kak/contexts/toml.kak"
source "~/.config/kak/contexts/yaml.kak"

###################### UTILITY ######################

set global grepcmd 'rg --smart-case --vimgrep'

# Empty scratch buffer(s)
hook global BufCreate '\*scratch(-\d+)?\*' %{ execute-keys -draft '%<a-d>' }

# Only color active window cursor
cork active-window https://github.com/greenfork/active-window.kak %{
  set-face global InactiveCursor default,rgba:5d5d5dFF
}

cork auto-pairs https://github.com/alexherbo2/auto-pairs.kak %{ enable-auto-pairs }

cork grep-expand https://github.com/jtrv/grep-expand.kak

cork grep-write https://github.com/jtrv/grep-write.kak

# Clipboard Integration
cork kakboard https://github.com/lePerdu/kakboard %{ hook global WinCreate .* %{ kakboard-enable } }

cork kakoune-auto-percent https://github.com/delapouite/kakoune-auto-percent

cork kakoune-state-save https://gitlab.com/Screwtapello/kakoune-state-save.git %{
  hook global KakBegin .* %{
    state-save-reg-load colon
    state-save-reg-load pipe
    state-save-reg-load slash
  }
  hook global KakEnd .* %{
    state-save-reg-save colon
    state-save-reg-save pipe
    state-save-reg-save slash
  }
}

cork kak-live-grep https://git.sr.ht/~raiguard/kak-live-grep %{
  set-face global LiveGrepMatch +u
}

cork sudo-write https://github.com/jtrv/sudo-write.kak %{
  alias global sw 'sudo-write'
  alias global swq 'sudo-write-quit'
}

# Display text with ansi color-codes inside a fifo
cork kakpipe https://github.com/eburghar/kakpipe %{ require-module kakpipe }

# Starship for kakoune modeline
cork kakship https://github.com/eburghar/kakship %{ kakship-enable }

# Interact with external programs
cork kampliment https://github.com/vbauerster/kampliment

###################### COMMANDS ######################

define-command bun -docstring "
  bun [<arguments>]: bun utility wrapper
  Launch bun with the given arguments inside kakoune
" -params 1.. %{
  kakpipe -S -V FORCE_COLOR=1 -- bun %arg{@}
}

define-command cargo -docstring "
  cargo [<arguments>]: cargo utility wrapper
  Launch cargo with the given arguments inside kakoune
" -params 1.. %{
  kakpipe -S -- cargo --color=always %arg{@}
}

define-command calc -docstring "
  calc [<arguments>]: calc utility wrapper
  Replace the selection with the result a given expression (X represents current selection)
" -params 0.. %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      printf %s\\n
    "
        prompt 'expression:' -init 'X' %{
          execute-keys \"| xargs -I X qalc -t '%val{text}' <ret>\"
        }
      "
    else
      printf %s\\n "
        execute-keys \"| xargs -I X qalc -t '$*' <ret>\"
      "
    fi
  }
}

define-command comment -docstring "(Un)Comment lines" %{
  try %{
    execute-keys _
    comment-block
  } catch comment-line
}

define-command delta -docstring "
  delta [<arguments>]: delta utility wrapper
  Launch delta with the given arguments inside kakoune
" -shell-completion -params 1.. %{
  kakpipe -n delta -- delta %arg{@};
}

define-command dic -docstring "
  dic <query>: dic utility wrapper
  Generate dictionary results for the given query inside kakoune
" -params 0..2 %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n dic -- dic %val{selection} %val{window_width}"
    else
      echo "kakpipe -n dic -- dic %arg{@} %val{window_width}"
    fi
  }
}

define-command diff -docstring "
  diff [<arguments>]: diff utility wrapper
  Generate a diff with the given arguments
" -shell-completion -params 1.. %{
  kakpipe -n diff -- diff -u %arg{@}; set buffer filetype diff;
}

define-command difft -docstring "
  difft [<arguments>]: difftastic utility wrapper
  Generate a diff with difftastic and the given arguments
" -shell-completion -params 1.. %{
  kakpipe -n difft -- difft --width %val{window_width} --color always %arg{@};
}

define-command diff-buffers -docstring "
  diff-buffers <buffer-a> <buffer-b>: diff utility
  Generate a diff buffer between <buffer-a> and <buffer-b>
" -buffer-completion -override -params 2 %{
  evaluate-commands %sh{
    file1=$(mktemp)
    file2=$(mktemp)
    echo "
      evaluate-commands -buffer '$1' write -force $file1
      evaluate-commands -buffer '$2' write -force $file2
      edit! -scratch *diff-buffers*
      set buffer filetype diff
      set-register | 'diff -u $file1 $file2 | \
        sd -n 1 -- ''-{3} /tmp.*?$'' ''--- $1'' | \
        sd -n 1 -- ''\+{3} /tmp.*?$'' ''+++ $2'';
        rm $file1 $file2'
      execute-keys !<ret>gg
    "
  }
}

define-command doc-grep -docstring "
  doc-grep <query>: grep kakoune and plugin docs
" -params .. %sh{
  fd \
    --absolute-path \
    --exclude '*changelog*' \
    --search-path "$(dirname $(dirname $kak_runtime))" \
    --search-path "$XDG_DATA_HOME/kak/" \
    --extension asciidoc |
      xargs echo "grep %arg{@}"
}

define-command glow -docstring "
  glow [<files>]: glow utility wrapper
  Open a glow formatted view of the provided files
" -file-completion -params 1.. %{
  kakpipe -n glow -- glow -s dark %arg{@};
}

define-command grep-buffers -docstring "
  grep-buffers [<pattern>]: search for a pattern in all buffers
  If <pattern> is not specified, the content of the main selection is used
" -params .. %sh{
  if [ $# -eq 0 ]; then
    echo "grep -F %val{selection} %val{buflist}"
  else
    echo "grep %arg{@} %val{buflist}"
  fi
}

define-command hey -docstring "
  hey <query>: heygpt utility wrapper
  Query ChatGPT and stream the response in a FIFO buffer
" -params 1.. %{
  kakpipe -w -n hey-response -- heygpt %arg{@};
}
hook global WinDisplay '\*hey\*' %{
  ui-wrap-enable
}
define-command hey-buffer -docstring "
  opens a *hey-prompt* buffer for writing prompts to pass to hey
" %{
  edit -scratch *hey-prompt*
  set-option buffer filetype hey-prompt
}
define-command hey-buffer-write -docstring "
  send the *hey-prompt* buffer to hey
" -hidden %[
  buffer *hey-prompt*
  execute-keys '%: hey %val{selection} <ret>'
]
hook global BufSetOption filetype=hey-prompt %{
  alias buffer write hey-buffer-write
  alias buffer w hey-buffer-write
}

define-command how -docstring "
  how <query>: how utility wrapper
  Get an answer from one of the popular Q&A platforms
" -params 1.. %{
  kakpipe -n how -- hors -a -n 2 -p never %arg{@};
}

define-command kan -docstring "
  kan <query>: man utility wrapper
  Either show a man-page or the --help text for the given query
" -params 0.. %{
  evaluate-commands %sh{
    if [ $# -eq 0 ] && man -w "$kak_selection" > /dev/null; then
      echo "man \"$kak_selection\""
    elif [ $# -eq 0 ] && $("$kak_selection" --help > /dev/null || "$kak_selection" -h > /dev/null); then
      echo "kelp \"$kak_selection\""
    elif man -w "$*" > /dev/null; then
      echo "man \"$*\""
    elif "$*" --help > /dev/null || "$*" -h > /dev/null; then
      echo "kelp \"$*\""
    fi
  }
}

define-command kelp -docstring "
  kelp <command>: --help output utility
  Show the --help output for the given command inside kakoune
" -shell-completion -params 0.. %{
  evaluate-commands %sh{
    if [ $# -eq 0 ] && "$kak_selection" --help > /dev/null; then
      echo "kakpipe -n help -- \"$kak_selection\" --help"
    elif [ $# -eq 0 ] && "$kak_selection" -h > /dev/null; then
      echo "kakpipe -n help -- \"$kak_selection\" -h"
    elif "$*" --help > /dev/null; then
      echo "kakpipe -n help -- \"$*\" --help"
    elif "$*" -h > /dev/null; then
      echo "kakpipe -n help -- \"$*\" -h"
    fi
  }
}

define-command mdn -docstring "
  mdn <query>: mdn utility wrapper
  Search through MDN documentation with fzf and mdcat
" %{
  popup mdn
}

define-command npm -docstring "
  npm [<arguments>]: npm utility wrapper
  Launch npm with the given parameters inside kakoune
" -params 1.. %{
  kakpipe -S -- npm %arg{@}
}

define-command open-file-picker -docstring "
  Open-file-picker: Opens file picker.
" %{
  prompt file: -shell-script-candidates 'fd --type file' %{
    edit %val{text}
  }
}

define-command open-buffer-picker -docstring "
  open-buffer-picker: Opens buffer picker.
" %{
  prompt buffer: -buffer-completion %{
    buffer %val{text}
  }
}
map global goto b -docstring "buffer"   '<a-;>: open-buffer-picker<ret>'

define-command open-global-picker -docstring 'open-global-picker: Opens global search picker.' %{
  # Provides word completion
  prompt grep: -shell-script-candidates %{
    echo "write '$kak_response_fifo'" > "$kak_command_fifo"
    cat "$kak_response_fifo" | kak -f 's[\w-]{4,}<ret>y%<a-R>a<ret>'
  } %{
    grep %val{text}
  }
}
map global user / -docstring "search"   '<a-;>: open-global-picker<ret>'

define-command popup -docstring "
  popup [<program>] [<arguments>]: Creates a new terminal as an Alacritty window (class: popup).
" -shell-completion -params .. %{
  nop %sh{
    alacritty msg create-window --class=popup --working-directory "$PWD" --command sh -c 'export KAKOUNE_SESSION=$1 KAKOUNE_CLIENT=$2 && shift 2 && exec "$@"' -- "$kak_session" "$kak_client" "${@:-$SHELL}"
  }
}

define-command reader-mode -docstring "Enables settings for better reading" %{
  remove-highlighter global/whitespace
  rainbow-disable-window
  ui-trailing-spaces-disable
  ui-whitespaces-disable
  ui-wrap-disable
  map buffer normal d <c-d>
  map buffer normal u <c-u>
}
hook global WinDisplay '\*(delta|diff|difft|greeting|help|man \w+|mdn|tldr)\*' %{
  reader-mode
}

define-command rman -docstring "
  rman <query>: rusty-man utility wrapper
  show a rustdoc page for the given module
" -params 1 %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n %val{selection} -- rusty-man --viewer rich %val{selection}"
    else
      echo "kakpipe -n %arg{1} -- rusty-man --viewer rich %arg{@}"
    fi
  }
}

define-command save-macro-as -docstring "
  save-macro-as <command-name>: define-command with macro register
" -params 1 %{
  define-command %arg{1} -override %{ execute-keys "%reg{@}" }
}

define-command set-filetype -docstring "prompt to set filetype" %{
  prompt filetype: -shell-script-candidates %{
      fd --base-directory "$kak_runtime/rc/filetype" -t f -x basename -s .kak {}
    } %{
      set buffer filetype %val{text}
  }
}

define-command thes -docstring "
  thes <query>: thesauromatic utility wrapper
  Generate thesaurus results for the given query
" -params 0..2 %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n thes -- thesauromatic %val{selection} | col %val{window_width}"
    else
      echo "kakpipe -n thes -- thesauromatic %arg{@} | col %val{window_width}"
    fi
  }
}

define-command tldr -docstring "
  tldr <command>: tldr utility wrapper
  Cheatsheet for the given command
" -shell-completion -params 0.. %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n tldr -- tldr --color always %val{selection}"
    else
      echo "kakpipe -n tldr -- tldr --color always %arg{@}"
    fi
  }
}

define-command view-pdf -docstring "
  view-pdf [<file.pdf>]: Watch .tex and view the pdf in zathura.
" -file-completion -params .. %{
  terminal devour zathura %arg{@}
}
alias global pdf view-pdf

define-command xargs -docstring "
  xargs [<arguments>]: xargs utility wrapper
  Execute a command with each selection, selections are represented with {} as a placeholder
" %{
  prompt 'command:' %{
    execute-keys "| xargs -I {} %val{text} <ret>"
  }
}

###################### NORMAL KEYS ######################

# Clear selections
map global normal <a-space> <a-,> -docstring "clear current (or nth) selection"
map global normal <esc> ,         -docstring "clear multi-selection and keep (nth)"

# Use W as a more ergonomic 'previous word'
map global normal w b         -docstring "select previous word"
map global normal W B         -docstring "extend previous word"
map global normal <a-w> <a-b> -docstring "select previous BIG-WORD"
map global normal <a-W> <a-B> -docstring "extend previous BIG-WORD"

# swap [] <a-[]>
map global normal <a-[> [     -docstring "select to previous object end"
map global normal [ <a-[>     -docstring "select upto previous object end"
map global normal ] <a-]>     -docstring "select upto next object end"
map global normal <a-]> ]     -docstring "select to next object end"

# Use <c-k>/<c-l> as more ergonomic undo/redo selction
map global normal <c-k> <c-h> -docstring "undo selection change"
map global normal <c-l> <c-k> -docstring "redo selection change"

# Select whole lines
map global normal J -docstring "select next line"       'Jx'
map global normal K -docstring "select previous line"   'Kx'

# Make x/X inner and outer object selection
map global normal x     -docstring "select inner"         '<a-i>'
map global normal X     -docstring "select outer"         '<a-a>'

# Select all matches
map global normal <a-x> -docstring "select all matches"   '*%s<ret>)'

# Select/add next match
map global normal v     -docstring "select next match"      '*n'
map global normal <a-v> -docstring "deselect current sel"   '*<a-n>'
map global normal V     -docstring "add next match"         '*N'
map global normal <a-V> -docstring "add previous match"     '*<a-N>'

# View Mode
map global normal Y v -docstring "view mode"

# Case insensitive search
map global normal /     -docstring "search"                      '/(?i)'
map global normal <a-/> -docstring "search backwards"            '<a-/>(?i)'
map global normal ?     -docstring "(extend) search"             '?(?i)'
map global normal <a-?> -docstring "(extend) search backwards"   '<a-?>(?i)'

# (Un)Comment Lines
map global normal <#> -docstring "comment"   ':comment <ret>'

# New windows
map global normal <c-n> -docstring "new client"     ':new <ret>'
map global normal <c-t> -docstring "new terminal"   ':connect terminal <ret>'
map global normal +     -docstring "new popup"      ':connect popup <ret>'

# Pickers
map global normal B     -docstring "buffer picker"   ': open-buffer-picker<ret>'
map global normal <c-p> -docstring "file picker"     ': open-file-picker<ret>'
map global normal <c-g> -docstring "grep picker"     ': connect popup kamp-grep<ret>'

# External Programs
map global normal <c-h> -docstring "lf"        ':connect popup lf <ret>'
map global normal <c-v> -docstring "lazygit"   ':connect popup lazygit <ret>'

###################### PROMPT KEYS ######################

map global prompt <c-n> <tab>   -docstring "next completion"
map global prompt <c-p> <s-tab> -docstring "previous completion"

map global prompt <a-.> -docstring "insert buffer directory"     '%sh{dirname "$kak_buffile"}<a-!>/'
map global prompt <a-,> -docstring "insert git root directory"   '%sh{git rev-parse --show-toplevel}<a-!>/'

###################### INSERT KEYS ######################

map global insert <c-v> -docstring "insert mode paste"   '<esc>Pi'

################# MODES ##################

map global user <space> : -docstring "prompt"

# Navigate buffers
cork kakoune-buffers https://github.com/delapouite/kakoune-buffers %{
  hook global WinDisplay .* info-buffers
    map global normal b ":enter-buffers-mode <ret>"
    alias global bd  delete-buffer
    alias global bd! delete-buffer!
    alias global bf  buffer-first
    alias global bl  buffer-last
    alias global bo  buffer-only
    alias global bo! buffer-only-force
}

cork kakoune-buffer-manager https://github.com/theowenyoung/kakoune-buffer-manager %{
  map global normal <a-B> -docstring "open buffer manager"   ': buffer-manager <ret>'
  map global buffers B    -docstring "buffer manager"        ': buffer-manager <ret>'
}

cork kakoune-cd https://github.com/delapouite/kakoune-cd %{
  map global user c ': enter-user-mode cd<ret>' -docstring 'cd'
  alias global cdb change-directory-current-buffer
  alias global cdr change-directory-project-root
  alias global ecd edit-current-buffer-directory
  alias global pwd print-working-directory
}

cork case https://gitlab.com/FlyingWombat/case.kak.git %{
  map global user C -docstring "case"   ': enter-user-mode case<ret>'
  map global case u '~' -docstring "upper"
  map global case l '`' -docstring "lower"
  map global case i '<a-`>' -docstring "invert"
  map global case s       -docstring "snake_case"      ': case-to-snake<ret>'
  map global case d       -docstring "dash-case"       ': case-to-dash<ret>'
  map global case .       -docstring "dot.case"        ': case-to-dot<ret>'
  map global case <space> -docstring "space case"      ': case-to-space<ret>'
  map global case t       -docstring "Title Case"      ': case-to-title<ret>'
  map global case c       -docstring "camelCase"       ': case-to-camel<ret>'
  map global case p       -docstring "PascalCase"      ': case-to-pascal<ret>'
  map global case j       -docstring "select joints"   ': case-select-joints<ret>'
  map global case J       -docstring "unify joints"    ': case-unify-joints<ret>'
  map global case w       -docstring "select words"    ': case-select-words<ret>'
}

map global user d -docstring "dev"  ':enter-user-mode dev <ret>'

declare-user-mode grep
  map global user g -docstring "grep"         ':enter-user-mode grep <ret>'
  map global grep g -docstring "grep"         ':grep <ret>'
  map global grep n -docstring "next match"   ':grep-next-match <ret>'
  map global grep p -docstring "prev match"   ':grep-previous-match <ret>'
  map global grep l -docstring "live-grep"    ':live-grep <ret>'

map global user h -docstring "hey"   ':hey-buffer <ret>'

map global user k -docstring "klip off"   ':kakboard-disable; kakboard-disable <ret>'
map global user K -docstring "klip on"    ':kakboard-enable <ret>'

map global user l -docstring "lsp" %{:enter-user-mode lsp <ret>}
  map global lsp <minus> -docstring "disable"   ':lsp-disable-window <ret>'
  map global lsp <plus>  -docstring "enable"    ':lsp-enable-window <ret>'

map global user M -docstring "maths"   ':maths <ret>'

cork kakoune-focus https://github.com/caksoylar/kakoune-focus %{
  map global user f -docstring "focus"   ':focus-toggle <ret>'
}

# Edit/extend/trim selections one by one
cork kakoune-phantom-selection https://github.com/occivink/kakoune-phantom-selection %{
  declare-user-mode phantom
  map global user p -docstring "phantom"       ':enter-user-mode phantom <ret>'
  map global phantom a -docstring "add"        ':phantom-selection-add-selection <ret>'
  map global phantom c -docstring "clear"      ':phantom-selection-select-all; phantom-selection-clear <ret>'
  map global phantom n -docstring "next"       ':phantom-selection-iterate-next <ret>'
  map global phantom p -docstring "previous"   ':phantom-selection-iterate-prev <ret>'
}

# Select/edit surrounding chars and tags
cork kakoune-surround https://github.com/h-youhei/kakoune-surround
  declare-user-mode surround
  map global normal <'> ":enter-user-mode surround <ret>"
  map global surround d -docstring "delete"              ':delete-surround <ret>'
  map global surround i -docstring "insert"              ':surround <ret>'
  map global surround r -docstring "replace"             ':change-surround <ret>'
  map global surround s -docstring "select"              ':select-surround <ret>'
  map global surround D -docstring "delete tag"          ':delete-surrounding-tag <ret>'
  map global surround I -docstring "surround with tag"   ':surround-with-tag <ret>'
  map global surround R -docstring "replace tag"         ':change-surrounding-tag <ret>'
  map global surround S -docstring "select tag"          ':select-surrounding-tag <ret>'

# Spelling and grammar checking
declare-user-mode spell
  map global user s  -docstring "spell"      ': enter-user-mode spell <ret>'
  map global spell e -docstring "enable"     ': skyspell-enable en_US <ret>'
  map global spell d -docstring "disable"    ': skyspell-disable <ret>'
  map global spell l -docstring "list"       ': skyspell-list <ret>'
  map global spell n -docstring "next"       ': skyspell-next <ret>'
  map global spell p -docstring "previous"   ': skyspell-previous <ret>'
  map global spell r -docstring "replace"    ': skyspell-replace <ret>'

cork ui https://github.com/kkga/ui.kak %{
  map global user u -docstring "ui mode"   ':enter-user-mode ui <ret>'
  set-option global ui_wrap_flags -width 100 -word -indent -marker ~~
  hook global WinCreate .* %{
    ui-git-diff-enable
    ui-lint-enable
    ui-todos-enable
    ui-trailing-spaces-enable
  }
}

# Write to file
map global user w -docstring "write"   ':w <ret>'

# pipe selections as args with xargs
map global user x -docstring "xargs"   ':xargs <ret>'

